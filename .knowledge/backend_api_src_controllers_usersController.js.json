{"is_source_file": true, "format": "JavaScript", "description": "This file defines the UsersController class which handles HTTP requests for user-related operations such as create, list, get by id, update, and delete in a healthcare appointment management system backend API.", "external_files": ["../services/userService"], "external_methods": ["UserService.createUser", "UserService.listUsers", "UserService.getUser", "UserService.updateUser", "UserService.deleteUser"], "published": ["new UsersController()"], "classes": [{"name": "UsersController", "description": "A controller class managing user-related API endpoints, including creating, listing, retrieving, updating, and deleting users."}], "methods": [{"name": "create(req, res)", "description": "Handles POST requests to create a new user; validates input and calls UserService.createUser.", "scope": "UsersController", "scopeKind": "class"}, {"name": "list(req, res)", "description": "Handles GET requests to list users with optional role, query, limit, and offset parameters.", "scope": "UsersController", "scopeKind": "class"}, {"name": "get", "description": "Handles GET requests to retrieve a user by their ID."}, {"name": "update", "description": "Handles PUT requests to update user data by ID."}, {"name": "delete", "description": "Handles DELETE requests to delete a user by ID."}], "calls": ["UserService.createUser", "UserService.listUsers", "UserService.getUser", "UserService.updateUser", "UserService.deleteUser"], "search-terms": ["UsersController", "userController.js", "createUser", "listUsers", "Rest API user endpoints"], "state": 2, "file_id": 26, "knowledge_revision": 53, "git_revision": "", "ctags": [{"_type": "tag", "name": "UserService", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/controllers/usersController.js", "pattern": "/^const UserService = require('..\\/services\\/userService');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "UsersController", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/controllers/usersController.js", "pattern": "/^class UsersController {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/controllers/usersController.js", "pattern": "/^  async create(req, res) {$/", "language": "JavaScript", "kind": "method", "signature": "(req, res)", "scope": "UsersController", "scopeKind": "class"}, {"_type": "tag", "name": "exports", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/controllers/usersController.js", "pattern": "/^module.exports = new UsersController();$/", "language": "JavaScript", "kind": "variable", "scope": "module", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/controllers/usersController.js", "pattern": "/^      const id = Number(req.params.id);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/controllers/usersController.js", "pattern": "/^      const id = Number(req.params.id);$/", "language": "JavaScript", "kind": "field", "scope": "UsersController", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/controllers/usersController.js", "pattern": "/^  async list(req, res) {$/", "language": "JavaScript", "kind": "method", "signature": "(req, res)", "scope": "UsersController", "scopeKind": "class"}, {"_type": "tag", "name": "req", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/controllers/usersController.js", "pattern": "/^  async get(req, res) {$/", "language": "JavaScript", "kind": "field", "scope": "UsersController", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/controllers/usersController.js", "pattern": "/^      if (!user) return res.status(404).json({ status: 'error', message: 'Not found' });$/", "language": "JavaScript", "kind": "field", "scope": "UsersController", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/controllers/usersController.js", "pattern": "/^      return res.status(200).json({ status: 'ok', data: user });$/", "language": "JavaScript", "kind": "field", "scope": "UsersController", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/controllers/usersController.js", "pattern": "/^  async get(req, res) {$/", "language": "JavaScript", "kind": "field", "scope": "UsersController", "scopeKind": "class"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/controllers/usersController.js", "pattern": "/^      const user = await UserService.getUser(id);$/", "language": "JavaScript", "kind": "field", "scope": "UsersController", "scopeKind": "class"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/controllers/usersController.js", "pattern": "/^      const user = await UserService.updateUser(id, { name, email, role, password });$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/controllers/usersController.js", "pattern": "/^      if (!user) return res.status(404).json({ status: 'error', message: 'Not found' });$/", "language": "JavaScript", "kind": "field", "scope": "UsersController", "scopeKind": "class"}], "hash": "cd7eaf6ca1f528d3981bbd9335780489", "format-version": 4, "code-base-name": "backend_api", "filename": "backend_api/src/controllers/usersController.js", "fields": [{"name": "module.exports = new UsersController();", "scope": "module", "scopeKind": "class", "description": "unavailable"}, {"name": "const id = Number(req.params.id);", "scope": "UsersController", "scopeKind": "class", "description": "unavailable"}, {"name": "async get(req, res) {", "scope": "UsersController", "scopeKind": "class", "description": "unavailable"}, {"name": "if (!user) return res.status(404).json({ status: 'error', message: 'Not found' });", "scope": "UsersController", "scopeKind": "class", "description": "unavailable"}, {"name": "return res.status(200).json({ status: 'ok', data: user });", "scope": "UsersController", "scopeKind": "class", "description": "unavailable"}, {"name": "const user = await UserService.getUser(id);", "scope": "UsersController", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"53": ""}]}