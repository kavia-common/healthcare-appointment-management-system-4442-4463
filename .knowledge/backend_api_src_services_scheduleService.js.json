{"is_source_file": true, "format": "JavaScript", "description": "This file defines the ScheduleService class, which provides methods for creating, retrieving, listing, and deleting schedule entries related to healthcare appointments. It validates plan types and interacts with the ScheduleModel for database operations.", "external_files": ["../models/scheduleModel"], "external_methods": ["ScheduleModel.upsert", "ScheduleModel.getByDoctorAndDate", "ScheduleModel.listByDoctor", "ScheduleModel.remove"], "published": ["ScheduleService"], "classes": [{"name": "ScheduleService", "description": "A service class that offers functionalities to manage healthcare appointment schedules, including validation and database access."}], "methods": [{"name": "upsertSchedule({ doctor_id, date, plan_type, notes })", "description": "Creates or updates a schedule for a doctor after validating the plan type.", "scope": "ScheduleService", "scopeKind": "class"}, {"name": "getSchedule(doctor_id, date)", "description": "Retrieves the schedule for a specific doctor on a given date.", "scope": "ScheduleService", "scopeKind": "class"}, {"name": "listSchedules({ doctor_id, start, end })", "description": "Lists all schedules for a doctor within a specific date range.", "scope": "ScheduleService", "scopeKind": "class"}, {"name": "deleteSchedule(doctor_id, date)", "description": "Removes a schedule entry for a doctor on a specified date.", "scope": "ScheduleService", "scopeKind": "class"}], "calls": ["ScheduleModel.upsert", "ScheduleModel.getByDoctorAndDate", "ScheduleModel.listByDoctor", "ScheduleModel.remove"], "search-terms": ["ScheduleService", "schedule management", "plan_type validation", "doctor schedule", "healthcare appointment"], "state": 2, "file_id": 23, "knowledge_revision": 47, "git_revision": "", "ctags": [{"_type": "tag", "name": "PLAN_TYPES", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/services/scheduleService.js", "pattern": "/^const PLAN_TYPES = new Set(['operation', 'outpatient', 'rounds', 'off']);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "ScheduleModel", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/services/scheduleService.js", "pattern": "/^const ScheduleModel = require('..\\/models\\/scheduleModel');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "ScheduleService", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/services/scheduleService.js", "pattern": "/^class ScheduleService {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "deleteSchedule", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/services/scheduleService.js", "pattern": "/^  static async deleteSchedule(doctor_id, date) {$/", "language": "JavaScript", "kind": "method", "signature": "(doctor_id, date)", "scope": "ScheduleService", "scopeKind": "class"}, {"_type": "tag", "name": "getSchedule", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/services/scheduleService.js", "pattern": "/^  static async getSchedule(doctor_id, date) {$/", "language": "JavaScript", "kind": "method", "signature": "(doctor_id, date)", "scope": "ScheduleService", "scopeKind": "class"}, {"_type": "tag", "name": "listSchedules", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/services/scheduleService.js", "pattern": "/^  static async listSchedules({ doctor_id, start, end }) {$/", "language": "JavaScript", "kind": "method", "signature": "({ doctor_id, start, end })", "scope": "ScheduleService", "scopeKind": "class"}, {"_type": "tag", "name": "upsertSchedule", "path": "/home/kavia/workspace/code-generation/healthcare-appointment-management-system-4442-4463/backend_api/src/services/scheduleService.js", "pattern": "/^  static async upsertSchedule({ doctor_id, date, plan_type, notes }) {$/", "language": "JavaScript", "kind": "method", "signature": "({ doctor_id, date, plan_type, notes })", "scope": "ScheduleService", "scopeKind": "class"}], "hash": "eb44f361667287fa00ce30589a6c2d7f", "format-version": 4, "code-base-name": "backend_api", "filename": "backend_api/src/services/scheduleService.js", "revision_history": [{"47": ""}]}